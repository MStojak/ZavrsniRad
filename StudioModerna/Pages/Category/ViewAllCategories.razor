@page "/categories"

@inject NavigationManager NavigationManager
@inject IEditCategory EditCategoryUseCase
@inject IViewCategories ViewCategoriesUseCase
@inject IDeleteCategory DeleteCategoryUseCase

<h3>Manage Daily Assigments</h3>
<br/>

@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
    
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td><button type="button" @onclick="() => EditCategoryMethod(category)" class="btn btn-link">Edit</button></td>
                    <td><button type="button" @onclick="() => DeleteCategoryMethod(category.Id)" class="btn btn-link">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}

<br/>

<button type="button" @onclick="OnClickAddCategory" class="btn btn-dark">Add Category</button>

@code {
    private List<Category>? categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    } 

    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/add-category");
    }

    private void EditCategoryMethod(Category category)
    {
        NavigationManager.NavigateTo($"/edit-category/{category.Id}");
    }

    private void DeleteCategoryMethod(int categoryId)
    {
        DeleteCategoryUseCase.Execute(categoryId);
        LoadCategories();
    }

    private void LoadCategories()
    {
        categories = ViewCategoriesUseCase.Execute()?.ToList();
    }
}
