@page "/edit-job/{jobId?}"

@inject NavigationManager NavigationManager
@inject IGetJobById GetJobByIdUseCase
@inject IViewCategories ViewCategoriesUseCase
@inject IViewAllSuppliers ViewSupplierUseCase
@inject IEditJob EditJobUseCase


<h3>EditJob</h3>
<br />

@if (job != null)
{
    <EditForm Model="@job" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="job.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="category-id">Category</label>
            <select id="category-id" @bind="job.CategoryId" class="form-control">
                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.Id">@cat.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="supplier-id">Supplier</label>
            <select id="supplier-id" @bind="job.SupplierId" class="form-control">
                <option selected></option>
                @foreach (var sup in suppliers)
                {
                    <option value="@sup.Id">@sup.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="deadline">Deadline</label>
            <InputDate id="deadline" @bind-Value="job.Deadline" class="form-control"></InputDate>
        </div>

        <div class="form-group">
            <label for="location">Location</label>
            <InputText id="location" @bind-Value="job.Location" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="job.Description" class="form-control"></InputText>
        </div>

        <div class="form-group form-check">
            <label for="is-taken">Is taken</label>
            <InputCheckbox id="is-taken" @bind-Value="job.IsTaken"></InputCheckbox>
        </div>
        <div class="form-group form-check">
            <label for="is-done">Is done</label>
            <InputCheckbox id="is-done" @bind-Value="job.IsDone"></InputCheckbox>
        </div>

        <!--ov treba masno porvjeriti-->
        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string jobId { get; set; }
    private Job job;
    private Job working;

    private IEnumerable<Category> categories;
    private IEnumerable<Supplier> suppliers;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        categories = ViewCategoriesUseCase.Execute();
        suppliers = ViewSupplierUseCase.Execute();
    }

    protected override async void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.jobId, out int iJobId))
        {
            this.working = GetJobByIdUseCase.Execute(iJobId);
            if (working != null)
            {
                this.job = new Job
                    {
                        Id = working.Id,
                        CategoryId = working.CategoryId,
                        Name = working.Name,
                        SupplierId = working.SupplierId,
                        Deadline = working.Deadline,
                        Location = working.Location,
                        Description = working.Description,
                        IsTaken = working.IsTaken,
                        IsDone = working.IsDone
                    };
            }
        }
    }


    private void HandleValidSubmit()
    {
        Job submitJob = this.job;
        EditJobUseCase.Execute(submitJob);
        NavigationManager.NavigateTo("/jobs");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/jobs");
    }
}
