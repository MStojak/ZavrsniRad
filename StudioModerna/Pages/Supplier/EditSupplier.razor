@page "/edit-supplier/{supplierId?}"

@inject NavigationManager NavigationManager
@inject IEditSupplier EditSupplierUseCase
@inject IGetSupplierById GetSupplierByIdUseCase

@if (supplier != null)
{
    <h3>Supplier: @supplier.Name</h3>
    <br />

    <EditForm Model="@supplier" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="supplier.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="oib">OIB</label>
            <InputText id="oib" @bind-Value="supplier.OIB" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="mail">Mail</label>
            <InputText id="mail" @bind-Value="supplier.Mail" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="mobile">Mobile Phone</label>
            <InputText id="mobile" @bind-Value="supplier.MobilePhone" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="location">Location</label>
            <InputText id="location" @bind-Value="supplier.Location" class="form-control"></InputText>
        </div>
        <br />
        <br />

        <div>
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
        <br />
        <br />
        <div>
            <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
        </div>
    </EditForm>
}
<br />
<br />

@code {
    [Parameter]
    public String? supplierId { get; set; }
    private Supplier? supplier;
    private Supplier? working;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.supplierId, out int iSupplierId))
        {
            this.working = GetSupplierByIdUseCase.Execute(iSupplierId);
            this.supplier = new Supplier
                {
                    Id = working.Id,
                    Name = working.Name,
                    OIB = working.OIB,
                    Mail = working.Mail,
                    MobilePhone = working.MobilePhone,
                    Location = working.Location
                };
        }
    }


    private void HandleValidSubmit()
    {
        if (supplier != null)
        {
            Supplier submitSupplier = this.supplier;
            EditSupplierUseCase.Execute(submitSupplier);
        }
        NavigationManager.NavigateTo("/suppliers");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/suppliers");
    }
}

