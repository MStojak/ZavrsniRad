@inject IGetJobById GetJobByIdUsecase

@if (jobToTake != null)
{
    <EditForm Model="@jobToTake" OnValidSubmit="@TakeJob">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="job">Name</label>
            <input type="text" readonly value="@(jobToTake.Name)" />
        </div>
        <div class="form-group">
            <label for="deadline">Deadline</label>
            <input type="datetime" readonly value="@(jobToTake.Deadline)" />
        </div>
        <div class="form-group">
            <label for="desc">Description</label>
            <input type="text" readonly value="@(jobToTake.Description)" />
        </div>
        <div class="form-group">
            <label for="take">Take</label>
            <input type="button"/>
        </div>
    </EditForm>
    <div class="alert alert-danger">@errorMessage</div>

}
@code {
    private string errorMessage;
    private Job jobToTake;

    [Parameter]
    public Job SelectedJob { get; set; }

    [Parameter]
    public EventCallback<Job> OnTakenJob { get; set; }


    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (SelectedJob != null)
        {
            jobToTake = new Job
                {
                    Id = SelectedJob.Id,
                    CategoryId = SelectedJob.CategoryId,
                    Name = SelectedJob.Name,
                    SupplierId = SelectedJob.SupplierId,
                    Deadline = SelectedJob.Deadline,
                    Location = SelectedJob.Location,
                    Description = SelectedJob.Description,
                    IsTaken = SelectedJob.IsTaken,
                    IsDone = SelectedJob.IsDone
                };
        }
    }

    private void TakeJob()
    {
        var job = GetJobByIdUsecase.Execute(jobToTake.CategoryId);
        if (!job.IsTaken)
        {
            OnTakenJob.InvokeAsync(jobToTake);
            errorMessage = "";
        }
        else
        {
            errorMessage = $"{job.Name} was taken by someone else.";
        }
    }

}
